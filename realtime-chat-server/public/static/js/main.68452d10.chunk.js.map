{"version":3,"sources":["components/chat/Chat.js","components/home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["socket","Chat","useState","messagesEnd","setMessagesEnd","useParams","userName","roomName","messages","setMessages","userInput","setUserInput","history","useHistory","sendMessage","console","log","from","text","emit","message","useEffect","io","joined","push","disconnect","on","JSON","stringify","scrollIntoView","behavior","error","alert","id","className","onClick","messageBoxes","i","length","renderMessages","ref","el","name","value","placeholder","onChange","e","target","autoComplete","onKeyPress","which","disabled","Home","setName","setRoomName","htmlFor","required","type","to","href","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68452d10.chunk.js","sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nimport \"./Chat.css\";\r\n\r\nconst SERVER_URI = \"https://ps-realtime-chat-react.herokuapp.com\";\r\nlet socket;\r\n\r\nfunction Chat() {\r\n  const [messagesEnd, setMessagesEnd] = useState(null);\r\n  const { userName, roomName } = useParams();\r\n  const [messages, setMessages] = useState([]);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    socket = io(SERVER_URI);\r\n    socket.emit(\"join\", { userName, roomName }, (joined) => {\r\n      if (!joined) {\r\n        history.push(\"/\");\r\n      }\r\n    });\r\n    return () => {\r\n      socket.disconnect();\r\n      //socket.off();\r\n    };\r\n  }, [userName, roomName]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      console.log(\"Received message\" + JSON.stringify(message));\r\n      console.log(\"Previos msgs \" + JSON.stringify(messages));\r\n      setMessages([...messages, message]);\r\n    });\r\n    if (messagesEnd) {\r\n      messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n    return () => {\r\n      //setMessages([]);\r\n    };\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"error\", (error) => {\r\n      alert(error.message);\r\n    });\r\n  });\r\n\r\n  function renderMessages() {\r\n    let messageBoxes = [];\r\n    for (let i = 0; i < messages.length; i++) {\r\n      messageBoxes.push(\r\n        <div className={`chat-bubble-container`} key={i}>\r\n          <label\r\n            className={`label ${\r\n              messages[i].from === userName ? \"text-right\" : \"text-left\"\r\n            }`}\r\n          >\r\n            {messages[i].from}\r\n          </label>\r\n          <div\r\n            className={`chat-bubble ${\r\n              messages[i].from === userName ? \"sent\" : \"received\"\r\n            } `}\r\n            key={i}\r\n          >\r\n            {messages[i].text}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return <div> {messageBoxes} </div>;\r\n  }\r\n\r\n  function sendMessage() {\r\n    console.log(\"sending\");\r\n    setMessages([...messages, { from: userName, text: userInput }]);\r\n    socket.emit(\"sendMessage\", {\r\n      message: { from: userName, text: userInput },\r\n      roomName,\r\n    });\r\n    setUserInput(\"\");\r\n  }\r\n\r\n  function leaveRoom() {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div id=\"chat\">\r\n      <div className=\"row header\">\r\n        <div className=\"col-10\">\r\n          <h4 id=\"room-name\">{roomName}</h4>\r\n        </div>\r\n        <div className=\"col-2\">\r\n          <div\r\n            id=\"leave-actn\"\r\n            className=\"action text-right\"\r\n            onClick={() => leaveRoom()}\r\n          >\r\n            leave\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"chat-box\">\r\n        {renderMessages()}\r\n        <div\r\n          ref={(el) => {\r\n            setMessagesEnd(el);\r\n          }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"user-input-container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-10\">\r\n            <input\r\n              id=\"user-input\"\r\n              name=\"user-input\"\r\n              value={userInput}\r\n              placeholder=\"Enter your message\"\r\n              onChange={(e) => setUserInput(e.target.value)}\r\n              autoComplete=\"off\"\r\n              onKeyPress={(e) => {\r\n                if (e.which === 13 && userInput) {\r\n                  sendMessage(e.target.value);\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"col-2 text-right\">\r\n            <button\r\n              disabled={!userInput}\r\n              className={userInput ? \"primary\" : \"gray\"}\r\n              onClick={() => sendMessage()}\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\nfunction Home() {\r\n  const [name, setName] = useState(\"\");\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  return (\r\n    <div id=\"home\">\r\n      <form>\r\n        <h2 id=\"app-name\" className=\"primary\">\r\n          {\" \"}\r\n          Realtime Chat\r\n        </h2>\r\n        <div className=\"row\">\r\n          <div className=\"col-3 offset\"> </div>\r\n          <div className=\"col-6 name-input-group\">\r\n            <label htmlFor=\"name\">Your Name</label>\r\n            <input\r\n              id=\"roomName\"\r\n              required\r\n              name=\"name\"\r\n              value={name}\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              placeholder=\"Ënter your name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n            />{\" \"}\r\n            <br />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-3 offset\"> </div>\r\n          <div className=\"col-6 room-name-input-group\">\r\n            <label htmlFor=\"roomName\">Room Name</label>\r\n            <input\r\n              id=\"roomName\"\r\n              required\r\n              name=\"roomName\"\r\n              value={roomName}\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              placeholder=\"Ënter room name\"\r\n              onChange={(e) => setRoomName(e.target.value)}\r\n            />{\" \"}\r\n            <br />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-3 offset\"> </div>\r\n          <div className=\"col-6 text-center\">\r\n            <Link to={`/chat/${roomName}/${name}`}>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"primary\"\r\n                disabled={!roomName || !name}\r\n              >\r\n                {\" \"}\r\n                Enter Rooom{\" \"}\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <footer>\r\n        <div className=\"footer-para\">\r\n          {\" \"}\r\n          Made with &#128151; by{\" \"}\r\n          <a href=\"https://www.prashantshinde.in\" target=\"_new\">\r\n            {\" \"}\r\n            Prashant{\" \"}\r\n          </a>{\" \"}\r\n        </div>{\" \"}\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute\n} from \"react-router-dom\";\nimport './App.css';\nimport Chat from './components/chat/Chat';\nimport Home from './components/home/Home';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Router>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/chat/:roomName/:userName\">\n\t\t\t\t\t\t<Chat />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}